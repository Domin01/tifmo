package tifmo

package resource {
	
	object EnDownward {

		private[this] val negwN = Set("absence", "doubt", "lack", "nobody", "nothing", "refusal", "rejection", "veto")
		
		private[this] val negwV = Set("avoid", "bar", "block", "decline", "defer", "deny", "deter", "discourage", "dismiss", "doubt", "eliminate", "exclude", "fail", "forestall", "oppose", "postpone", "preclude", "prevent", "prohibit", "refrain", "refuse", "reject", "resist", "suspend", "thwart")
		
		private[this] val negwJ = Set("absent", "barely", "doubtful", "hardly", "innocent", "never", "premature", "rarely", "reluctant", "skeptical", "unable", "unclear", "unlike", "unlikely")
		
		def isNegWord(w: String, p: String) = p match {
			case "N" => negwN.contains(w)
			case "V" => negwV.contains(w)
			case "J" => negwJ.contains(w)
			case "R" => negwJ.contains(w)
			case _ => false
		}
	}
}
