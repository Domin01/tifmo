package tifmo

import java.io.InputStreamReader
import java.io.BufferedReader
import java.io.OutputStreamWriter
import java.io.BufferedWriter

import scala.collection.mutable

package resource {
	
	object EnNgramDist {
		
		private[this] val cmd = "/works/csisv13/tianran/bin/ssgnc-search"
		private[this] val indx = "/works/csisv13/tianran/ngramen/index"
		private[this] val ntok = 5
		private[this] val minf = 40
		
		private[this] val pssgnc = (new ProcessBuilder(cmd, "--ssgnc-num-tokens=" + ntok, "--ssgnc-min-freq=" + minf, "--ssgnc-max-num-results=1099511627775", "--ssgnc-order=UNORDERED", indx)).start()
		private[this] val result = new BufferedReader(new InputStreamReader(pssgnc.getInputStream, "UTF-8"))
		private[this] val request = new BufferedWriter(new OutputStreamWriter(pssgnc.getOutputStream, "UTF-8"))
		
		def get(str: String, ret: mutable.Map[String, Long]) {
			if (!EnStopWords.isStopWord(str)) {
				val strws = str.toLowerCase.split(" ").toSet
				
				//System.err.println("start searching " + str + " ...")
				request.write(str)
				request.newLine()
				request.flush()
				
				def readResult() {
					val s = result.readLine()
					if (!s.isEmpty) {
						val sptab = s.split("\t", -1)
						assert(sptab.length == 2)
						val spsp = sptab(0).split(" ", -1)
						assert(spsp.length == ntok)
						
						val freq = sptab(1).toLong
						for (wpre <- spsp; w = wpre.toLowerCase) {
							if (!strws.contains(w) && EnStopWords.isNormalWord(w)) {
								if (ret.contains(w)) {
									ret(w) = ret(w) + freq
								} else {
									ret(w) = freq
								}
							}
						}
						readResult()
					}
				}
				readResult()
				
				//System.err.println("done.")
			}
		}
	}
}
