package tifmo

import ac.biu.nlp.normalization.BiuNormalizer

import resource.EnWordNet

package proc {

	object preProcEnglish {
		
		private[this] val numbers = Set("twenty-one", "twenty-two", "twenty-three", "twenty-four", "twenty-five", "twenty-six", "twenty-seven", "twenty-eight", "twenty-nine", "thirty-one", "thirty-two", "thirty-three", "thirty-four", "thirty-five", "thirty-six", "thirty-seven", "thirty-eight", "thirty-nine", "forty-one", "forty-two", "forty-three", "forty-four", "forty-five", "forty-six", "forty-seven", "forty-eight", "forty-nine", "fifty-one", "fifty-two", "fifty-three", "fifty-four", "fifty-five", "fifty-six", "fifty-seven", "fifty-eight", "fifty-nine", "sixty-one", "sixty-two", "sixty-three", "sixty-four", "sixty-five", "sixty-six", "sixty-seven", "sixty-eight", "sixty-nine", "seventy-one", "seventy-two", "seventy-three", "seventy-four", "seventy-five", "seventy-six", "seventy-seven", "seventy-eight", "seventy-nine", "eighty-one", "eighty-two", "eighty-three", "eighty-four", "eighty-five", "eighty-six", "eighty-seven", "eighty-eight", "eighty-nine", "ninety-one", "ninety-two", "ninety-three", "ninety-four", "ninety-five", "ninety-six", "ninety-seven", "ninety-eight", "ninety-nine")
		
		private[this] val biun = new BiuNormalizer(new java.io.File("extern/rules/string_rules.txt"))
		
		def apply(s: String) = {
			
			val sp = s.trim.split(" +")
			
			// hyphen rule
			val sphr = for (pw <- sp) yield {
				if (pw.indexOf("-") != -1) {
					if (numbers.contains(pw.toLowerCase) || (!EnWordNet.hasWord(pw) && pw.split("-").forall(EnWordNet.hasWord(_)))) {
						pw.replaceAll("-", " ")
					} else {
						pw
					}
				} else {
					pw
				}
			}
			
			// slash rule
			val spsl = for (pw <- sphr) yield {
				if (pw.matches("[a-zA-Z]+/[a-zA-Z]+")) {
					pw.replaceAll("/", " ")
				} else {
					pw
				}
			}
			
			// normalize
			biun.normalize(spsl.mkString("", " ", ""))
		}
	}
}
